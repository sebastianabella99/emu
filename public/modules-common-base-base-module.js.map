{"version":3,"sources":["webpack:///./src/app/modules/common/base/base-routing.module.ts","webpack:///./src/app/modules/common/base/base.module.ts","webpack:///./src/app/modules/common/guards/product-access.guard.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACc;AAEa;AACC;AAErE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,kBAAkB;QACxB,YAAY,EAAE,sDAAsD;KACrE;IACD;QACE,IAAI,EAAE,KAAK;QACX,YAAY,EAAE,gCAAgC;QAC9C,OAAO,EAAE,CAAE,gFAAc,EAAE,+EAAkB,CAAE;QAC/C,IAAI,EAAE;YACJ,aAAa,EAAE,WAAW;SAC3B;KACF;IACD;QACE,IAAI,EAAE,WAAW;QACjB,YAAY,EAAE,kDAAkD;KACjE;IACD;QACE,IAAI,EAAE,IAAI;QACV,UAAU,EAAE,WAAW;KACxB;CACF,CAAC;AAMF,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;CAAI;AAArB,iBAAiB;IAJ7B,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,iBAAiB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACjCW;AACM;AACW;AACW;AACA;AACE;AAevE,IAAa,UAAU,GAAvB,MAAa,UAAU;CAAI;AAAd,UAAU;IAbtB,8DAAQ,CAAC;QACR,YAAY,EAAE,EAAG;QACjB,OAAO,EAAE;YACP,4DAAY;YACZ,sEAAiB;SAClB;QACD,OAAO,EAAE,EAAE;QACX,SAAS,EAAE;YACT,gFAAW;YACX,gFAAa;YACb,kFAAe;SAChB;KACF,CAAC;GACW,UAAU,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;ACpBoB;AAGkD;AACzD;AACuB;AAK3D,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAG7B,YACU,KAAkC;QAAlC,UAAK,GAAL,KAAK,CAA6B;QAE1C,IAAI,CAAC,MAAM,GAAG,wEAAW,CAAC,MAAM,CAAC;IACnC,CAAC;IAED,OAAO,CACL,KAAY,EACZ,QAAsB;QAEtB,IAAK,CAAC,IAAI,CAAC,MAAM,EAAG;YAClB,OAAO,IAAI,CAAC;SACb;QACD,OAAQ,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,+CAAQ,CAAC,CAAC;IACzC,CAAC;CACF;AAlBY,kBAAkB;IAH9B,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAKiB,wGAAsB;GAJ5B,kBAAkB,CAkB9B;AAlB8B","file":"modules-common-base-base-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MODULES_CAM } from '../CONST';\r\nimport { ProductAccessGuard } from '../guards/product-access.guard';\r\nimport { ForbiddenGuard } from '../guards/forbidden/forbidden.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'solicitudInicial',\r\n    loadChildren: 'src/app/modules/initial/initial.module#InitialModule'\r\n  },\r\n  {\r\n    path: 'cam',\r\n    loadChildren: '../../cam/cam.module#CamModule',\r\n    canLoad: [ ForbiddenGuard, ProductAccessGuard ],\r\n    data: {\r\n      stepForbidden: 'forbidden'\r\n    }\r\n  },\r\n  {\r\n    path: 'forbidden',\r\n    loadChildren: '../../forbidden/forbidden.module#ForbiddenModule'\r\n  },\r\n  {\r\n    path: '**',\r\n    redirectTo: 'forbidden'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BaseRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BaseRoutingModule } from './base-routing.module';\r\nimport { AuthService } from '../service/authentication/auth.service';\r\nimport { CriptoService } from '../service/encryption/cripto.service';\r\nimport { WorkflowService } from '../service/workflow/workflow.service';\r\n\r\n@NgModule({\r\n  declarations: [ ],\r\n  imports: [\r\n    CommonModule,\r\n    BaseRoutingModule\r\n  ],\r\n  exports: [],\r\n  providers: [\r\n    AuthService,\r\n    CriptoService,\r\n    WorkflowService\r\n  ]\r\n})\r\nexport class BaseModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { SendInformationService } from '../service/SendInformation/send-information.service';\r\nimport { PRODUCTO } from '../CONST';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductAccessGuard implements CanLoad {\r\n\r\n  guards: boolean;\r\n  constructor(\r\n    private guard: SendInformationService<any>\r\n  ) {\r\n    this.guards = environment.guards;\r\n  }\r\n\r\n  canLoad(\r\n    route: Route,\r\n    segments: UrlSegment[]\r\n  ): boolean {\r\n    if ( !this.guards ) {\r\n      return true;\r\n    }\r\n    return  this.guard.lastValue(PRODUCTO);\r\n  }\r\n}\r\n"],"sourceRoot":""}